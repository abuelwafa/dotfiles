# make the workspace folder
mkdir -p ~/workspace
# create the machine config file. this file contains customizations specific to the current machine
touch ~/workspace/.machine-config
echo 'export GIT_COMMITTER_EMAIL="mohamed.abuelwafa@gmail.com"' | tee -a ~/workspace/.machine-config
echo 'export GIT_AUTHOR_EMAIL="mohamed.abuelwafa@gmail.com"' | tee -a ~/workspace/.machine-config
echo 'export OPENAI_API_KEY="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"' | tee -a ~/workspace/.machine-config
=============================================================
/* generate ssh keys */
ssh-keygen -t ed25519 -C "your_email@example.com"
=============================================================
# debian install the following packages
curl git xclip build-essential ufw
python3-venv python3-pip python3-dev
=============================================================
cargo install tclock
=============================================================
# ubuntu/debian: setup firewall
sudo apt install ufw
sudo ufw default deny incoming
sudo ufw allow in http
sudo ufw allow ssh
sudo ufw allow in 3000/tcp
sudo ufw enable
sudo ufw status verbose
=============================================================
# install Homebrew from it's website
https://brew.sh/
# add homebrew to path
touch ~/.zprofile
# for ubuntu
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
# macos
eval "$(/opt/homebrew/bin/brew shellenv)"
=============================================================
# install latest essentials using homebrew
# install nodejs lts from homebrew
# install bat https://github.com/sharkdp/bat
brew install the following:
zsh vim neovim git tmux gcc cmake tree htop git-delta node@22
doggo luarocks
bat ripgrep fzf fd fx jq yh lazygit libpq gh dust eza hcloud
cmatrix
kubernetes-cli helm python watchman go ansible fluxcd/tap/flux
derailed/k9s/k9s
lnav goaccess
yarn

Desktop only: act minikube qemu lima

# install GNU version of sed (for MACOS)
# MacOS doesn't have the watch command
Mac only: gsed watch

rbenv ruby-build
=============================================================
brew tap hashicorp/tap
brew install hashicorp/tap/terraform
=============================================================
clone essential repos
cd ~/workspace
git clone git@github.com:abuelwafa/dotfiles.git
git clone https://github.com/ohmyzsh/ohmyzsh.git
git clone https://github.com/bigH/git-fuzzy.git
git clone https://github.com/tinted-theming/tinted-shell.git
git clone https://github.com/tmux-plugins/tpm
=============================================================
# install universal-ctags
# https://ctags.io/
brew tap universal-ctags/universal-ctags
brew install --HEAD universal-ctags
=============================================================
# install pgcli, litecli, mycli, iredis using homebrew (instructions on website)
# https://www.dbcli.com/
# https://www.pgcli.com/
# https://iredis.xbin.io
brew tap dbcli/tap
brew install pgcli litecli mycli iredis
=============================================================
# link zshrc
# ubuntu
ln -s ~/workspace/dotfiles/zsh/.zshrc.ubuntu ~/.zshrc
# mac
ln -s ~/workspace/dotfiles/zsh/.zshrc.mac ~/.zshrc
================================================================
# link alacritty config
mkdir -p ~/.config/alacritty
ln -s ~/workspace/dotfiles/alacritty/alacritty.toml ~/.config/alacritty/alacritty.toml
=============================================================
# TODO: install nerd-fonts using homebrew
brew install font-jetbrains-mono-nerd-font
brew install font-meslo-lg-nerd-font
# download and install meslo font from nerd font releases
https://github.com/ryanoasis/nerd-fonts
# terminal preferences: change font to be Meslo LG L Regular
=============================================================
MACOS
# system preferences configurations:
- enable firewall in the settings
- keyboard settings: increase the key repeating frequency (delay untill repeat: short, key repeat: fat)
- Keyboard -> input sources -> add "Arabic - PC" language input source
- Keyboard -> input sources -> check show input menu in menu bar
- keyboard -> shortcuts -> input sources -> select the previous input source -> option+space
- keyboard -> Text -> uncheck "Correct spelling automatically"
- keyboard -> Text -> uncheck "Capitalize words automatically"
- keyboard -> Text -> uncheck "Add full stop with double-space"
- trackpad: enable tap to click
- general: show scrollbars always
- general: click in the scroll bar jump to the next page
- mission control: uncheck automatically rearrange spaces based on most recent use.
- mission control: check group windows by application.
- Bluetooth: show bluetooth in menu bar
- sound: check show sound in menu bar -> always
=============================================================
MACOS
login with your apple id
install i stat menus, magnet, xcode from app store
=============================================================
MACOS
download the ios simulator from Xcode preferences
=============================================================
MACOS
# install docker cli and container runtime through colima from homebrew
# https://github.com/abiosoft/colima
brew install docker colima
=============================================================
UBUNTU
# install docker engine according to the instructions from the docker website
================================================================
install from their respective websites
Google Chrome
Zoom
VSCode
slack (from snap store for Ubuntu)
Dropbox
Thunderbird from thunderbird.net
OBS from https://obsproject.com/
DBeaver from debeaver.io (mac -> homebrew, Ubuntu -> snap store )
vlc videolan.org/vlc (snap store for Ubuntu)
NordVPN
Discord
android studio and android sdk
Spotify (snap store for Ubuntu)
=============================================================
# install latest stable ruby using rvm
==================================================================
# install jdk, gradle and kotlin from sdkman
https://sdkman.io/
sdk install java
sdk install gradle
sdk install kotlin
sdk install groovy
sdk install maven
=============================================================
# base16_theme: run the base16 theme command with the colorscheme you want
base16_gruvbox-dark-hard
base16_seti
base16_material-darker
base16_catppuccin
base16_catppuccin-mocha
base16_da-one-black
=============================================================
# git configuration
ln -s ~/workspace/dotfiles/.gitconfig ~/.gitconfig
=============================================================
# yamlfmt configuration
ln -s ~/workspace/dotfiles/yamlfmt.yml ~/yamlfmt.yml
=============================================================
# pgcli config
mkdir -p ~/.config/pgcli
ln -s ~/workspace/dotfiles/pgcli.config ~/.config/pgcli/config
=============================================================
# tmux
ln -s ~/workspace/dotfiles/tmux/tmux.conf ~/.tmux.conf
# run tmux and install plugins with <prefix>I
# edit network speed arrow icons (MACOS only)
sed -i -e 's/↓//' ~/.tmux/plugins/tmux-network-speed/network_speed.sh
sed -i -e 's/↑//' ~/.tmux/plugins/tmux-network-speed/network_speed.sh

# linux only: export the correct network interface to get online speeds correctly if not on macos
# for macos, it should be already configured. no need to export this variable
# you can look at available interfaces in /proc/net/dev for linux.
echo 'export TMUX_STATUS_NETWORK_SPEED_INTERFACE="wlan0"' | tee -a ~/workspace/.machine-config
=============================================================
# neovim config
mkdir -p ~/.config/nvim
ln -s ~/workspace/dotfiles/nvim/init.lua ~/.config/nvim/init.lua
ln -s ~/workspace/dotfiles/vim/.vimrc ~/.vimrc
mkdir -p ~/.nvim/_temp
mkdir -p ~/.nvim/_backup
=============================================================
# change the default shell to be zsh (ubuntu only - mac already comes with zsh as the default shell)
# you should have zsh install from homebrew from the previous step
# add zsh first to the list of shells
command -v zsh | sudo tee -a /etc/shells
chsh -s $(which zsh)
# then logout and log back in

# to change back to bash
chsh -s /usr/bin/bash
=============================================================
# install aws cli from amazon website
=============================================================
# install rust from the website
==================================================================
# switching node versions using Homebrew when installing more than one version
brew unlink node
brew link node@22 --force --overwrite
=============================================================
helpful chrome extensions
https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk
https://chrome.google.com/webstore/detail/papier/hhjeaokafplhjoogdemakihhdhffacia
https://chrome.google.com/webstore/detail/gofullpage-full-page-scre/fdpohaocaechififmbbbbbknoalclacl
https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh
vimium
react developer tools
redux developer tools
react-query developer tools
google translate
json formatter
grammarly
pixelzoomer
=============================================================
MACOS
install from their respective websites:
Alfred
iTerm
ImageOptim
the unarchiver
=============================================================
# showing hidden files on mac
defaults write com.apple.finder AppleShowAllFiles YES && killall Finder
=============================================================
gimp
MACOS through Homebrew
brew install gimp
linux through apt
sudo apt install gimp
=============================================================
MACOS
# clear nordvpn application defaults after every upgrade
# might consider adding them to an alias
defaults delete com.nordvpn.osx-apple
defaults delete com.nordvpn.osx

# setting dns servers for nord vpn - for Egypt
# https://support.nordvpn.com/Connectivity/macOS/1088046792/Change-your-DNS-servers-on-macOS.htm
=============================================================
MACOS
optional: install meetingBar using HomeBrew
brew install meetingbar
https://github.com/leits/MeetingBar
=============================================================
MACOS
# create ssh config file with config to use ssh keys without password
echo "Include ~/workspace/dotfiles/ssh-config-mac" >> ~/.ssh/config
=============================================================
MACOS
# optional: disable accented characters (key press and hold to view accents)
defaults write -g ApplePressAndHoldEnabled -bool false
=============================================================
MACOS
# optional: add spaces to the mac osx dock
defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
# repeat the command for the number of spaces wanted, then restart the dockwith the command
killall Dock
=============================================================
MACOS
# optional: install OSXfuse for dealing with NTFS and external hard disk drives
https://github.com/osxfuse/osxfuse
=============================================================
increase ubuntu inotify watchers for dropbox sync and for projects file watching
echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
==================================================================
# for ubuntu cloud vms
# create new non-root user
adduser username
# or
useradd \
    --create-home \
    --shell $(which bash) \
    --user-group \
    --groups sudo,group1,group2 \
    username

# set a password for the newly created user
passwd username

# expire the password to prompt the user to enter a new password
passwd --expire username

# add the newly created user to the sudo group if not done upon creation
adduser username sudo
# or
usermod -aG sudo username

# copy ssh public keys to the new user
mkdir -p /home/username/.ssh
cp /root/.ssh/authorized_keys /home/username/.ssh/authorized_keys
chown --recursive username:username /home/username/.ssh
============================================================

